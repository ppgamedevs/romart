version: '3.8'

services:
  # Database
  postgres:
    image: postgres:16-alpine
    container_name: artfromromania-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: artfromromania
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d artfromromania"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - artfromromania-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: artfromromania-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - artfromromania-network

  # Meilisearch for search functionality
  meilisearch:
    image: getmeili/meilisearch:v1.7.0
    container_name: artfromromania-meilisearch
    restart: unless-stopped
    environment:
      MEILI_MASTER_KEY: masterKey
      MEILI_ENV: development
    ports:
      - "7700:7700"
    volumes:
      - meili_data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - artfromromania-network

  # API Server
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: artfromromania-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/artfromromania
      REDIS_URL: redis://redis:6379
      MEILI_HOST: http://meilisearch:7700
      MEILI_MASTER_KEY: masterKey
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    volumes:
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - artfromromania-network

  # Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: artfromromania-web
    restart: unless-stopped
    environment:
      NODE_ENV: development
      API_URL: http://api:3001
      NEXT_PUBLIC_API_URL: http://localhost:3001
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_started
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages:/app/packages
      - /app/node_modules
    networks:
      - artfromromania-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: artfromromania-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - api
    networks:
      - artfromromania-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  meili_data:
    driver: local

networks:
  artfromromania-network:
    driver: bridge
